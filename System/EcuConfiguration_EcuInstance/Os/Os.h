/**************************************************************************************************\
 *** Os.h
 ***
 *** This file defines the public API for the AUTOSAR OS module.
 ***
 *** Generated by dSPACE SystemDesk
 ***
 *** Copyright 2020, dSPACE GmbH. All rights reserved.
\**************************************************************************************************/

#ifndef OS_H
#define OS_H

/*------------------------------------------------------------------------------------------------*\
  INCLUDES
\*------------------------------------------------------------------------------------------------*/

#include "Os_Cfg.h"
#include "Os_Types.h"

#ifdef __cplusplus
extern "C" {
#endif

/*------------------------------------------------------------------------------------------------*\
  DEFINES
\*------------------------------------------------------------------------------------------------*/

/* OS error codes */
#define E_OS_ACCESS                            0x01u
#define E_OS_CALLEVEL                          0x02u
#define E_OS_ID                                0x03u
#define E_OS_LIMIT                             0x04u
#define E_OS_NOFUNC                            0x05u
#define E_OS_RESOURCE                          0x06u
#define E_OS_STATE                             0x07u
#define E_OS_VALUE                             0x08u
#define E_OS_MISSINGEND                        0x09u
#define E_OS_DISABLEDINT                       0x0Au
#define E_OS_SERVICEID                         0x0Bu
#define E_OS_ILLEGAL_ADDRESS                   0x0Cu
#define E_OS_STACKFAULT                        0x0Du
#define E_OS_PROTECTION_MEMORY                 0x0Eu
#define E_OS_PROTECTION_TIME                   0x0Fu
#define E_OS_PROTECTION_ARRIVAL                0x10u
#define E_OS_PROTECTION_LOCKED                 0x11u
#define E_OS_PROTECTION_EXCEPTION              0x12u
#define E_OS_CORE                              0x13u
#define E_OS_SPINLOCK                          0x14u
#define E_OS_INTERFERENCE_DEADLOCK             0x15u
#define E_OS_NESTING_DEADLOCK                  0x16u
#define E_OS_PARAM_POINTER                     0x17u

/* OS service IDs */
#define OSServiceId_Invalid                    0x00u
#define OSServiceId_ActivateTask               0x01u
#define OSServiceId_TerminateTask              0x02u
#define OSServiceId_ChainTask                  0x03u
#define OSServiceId_Schedule                   0x04u
#define OSServiceId_GetTaskID                  0x05u
#define OSServiceId_GetTaskState               0x06u
#define OSServiceId_DisableAllInterrupts       0x07u
#define OSServiceId_EnableAllInterrupts        0x08u
#define OSServiceId_SuspendAllInterrupts       0x09u
#define OSServiceId_ResumeAllInterrupts        0x0Au
#define OSServiceId_SuspendOSInterrupts        0x0Bu
#define OSServiceId_ResumeOSInterrupts         0x0Cu
#define OSServiceId_GetResource                0x0Du
#define OSServiceId_ReleaseResource            0x0Eu
#define OSServiceId_SetEvent                   0x0Fu
#define OSServiceId_ClearEvent                 0x10u
#define OSServiceId_GetEvent                   0x11u
#define OSServiceId_WaitEvent                  0x12u
#define OSServiceId_GetAlarmBase               0x13u
#define OSServiceId_GetAlarm                   0x14u
#define OSServiceId_SetRelAlarm                0x15u
#define OSServiceId_SetAbsAlarm                0x16u
#define OSServiceId_CancelAlarm                0x17u
#define OSServiceId_GetActiveApplicationMode   0x18u
#define OSServiceId_StartOS                    0x19u
#define OSServiceId_ShutdownOS                 0x1Au
#define OSServiceId_GetApplicationID           0x1Bu
#define OSServiceId_GetCounterValue            0x1Cu
#define OSServiceId_GetElapsedValue            0x1Du
#define OSServiceId_ActivateTaskAsyn           0x1Eu
#define OSServiceId_SetEventAsyn               0x1Fu
#define OSServiceId_GetISRID                   0x20u
#define OSServiceId_CallTrustedFunction        0x21u
#define OSServiceId_CheckISRMemoryAccess       0x22u
#define OSServiceId_CheckTaskMemoryAccess      0x23u
#define OSServiceId_CheckObjectAccess          0x24u
#define OSServiceId_CheckObjectOwnership       0x25u
#define OSServiceId_StartScheduleTableRel      0x26u
#define OSServiceId_StartScheduleTableAbs      0x27u
#define OSServiceId_StopScheduleTable          0x28u
#define OSServiceId_NextScheduleTable          0x29u
#define OSServiceId_StartScheduleTableSynchron 0x2Au
#define OSServiceId_SyncScheduleTable          0x2Bu
#define OSServiceId_GetScheduleTableStatus     0x2Cu
#define OSServiceId_SetScheduleTableAsync      0x2Du
#define OSServiceId_IncrementCounter           0x2Eu
#define OSServiceId_TerminateApplication       0x2Fu
#define OSServiceId_AllowAccess                0x30u
#define OSServiceId_GetApplicationState        0x31u
#define OSServiceId_ControlIdle                0x32u
#define OSServiceId_GetCurrentApplicationID    0x33u
#define OSServiceId_ReadPeripheral8            0x34u
#define OSServiceId_ReadPeripheral16           0x35u
#define OSServiceId_ReadPeripheral32           0x36u
#define OSServiceId_WritePeripheral8           0x37u
#define OSServiceId_WritePeripheral16          0x38u
#define OSServiceId_WritePeripheral32          0x39u
#define OSServiceId_ModifyPeripheral8          0x3Au
#define OSServiceId_ModifyPeripheral16         0x3Bu
#define OSServiceId_ModifyPeripheral32         0x3Cu
#define OSServiceId_DisableInterruptSource     0x3Du
#define OSServiceId_EnableInterruptSource      0x3Eu
#define OSServiceId_ClearPendingInterrupt      0x3Fu
#define OSServiceId_GetNumberOfActivatedCores  0x40u
#define OSServiceId_GetCoreID                  0x41u
#define OSServiceId_StartCore                  0x42u
#define OSServiceId_StartNonAutosarCore        0x43u
#define OSServiceId_GetSpinlock                0x44u
#define OSServiceId_ReleaseSpinlock            0x45u
#define OSServiceId_TryToGetSpinlock           0x46u
#define OSServiceId_ShutdownAllCores           0x47u

#define INVALID_TASK                           ((TaskType) -1)

/* SWS_Os_00772 */
#define INVALID_OSAPPLICATION                  ((ApplicationType) 0xFFFFFFFF)

/* SWS_Os_00778 */
#define ACCESS                                 ((ObjectAccessType) 1)
#define NO_ACCESS                              ((ObjectAccessType) 0)

/* SWS_Os_00788 */
#define RESTART                                ((RestartType) 0)
#define NO_RESTART                             ((RestartType) 1)

/* SWS_Os_00793 */
#define IDLE_NO_HALT                           ((IdleModeType) 0)

/* SWS_Os_91007 */
#define DONOTCARE                              ((AppModeType) 0xFF)

/* IOC Constants */
#define IOC_E_OK                               ((Std_ReturnType) 0)     /* RTE_E_OK */
#define IOC_E_NOK                              ((Std_ReturnType) 1)     /* RTE_E_NOK */
#define IOC_E_LENGTH                           ((Std_ReturnType) 0xFFu) /* INTERNAL DEFINTION */
#define IOC_E_LIMIT                            ((Std_ReturnType) 130)   /* RTE_E_LIMIT */
#define IOC_E_LOST_DATA                        ((Std_ReturnType) 64)    /* RTE_E_LOST_DATA */
#define IOC_E_NO_DATA                          ((Std_ReturnType) 131)   /* RTE_E_NO_DATA */

/* ECUC_Os_00049 */
#define RES_SCHEDULER ((ResourceType)0)  

/* ECUC_Os_00022 */
#define OSDEFAULTAPPMODE ((AppModeType)0)

/*------------------------------------------------------------------------------------------------*\
  MACROS
\*------------------------------------------------------------------------------------------------*/

/* Declare macros for backward compatibility with OSEK */
#define DeclareTask(Task)
#define DeclareResource(Resource)
#define DeclareEvent(Event)
#define DeclareCounter(Counter)
#define DeclareAlarm(Alarm)
#define DeclareAppMode(AppMode)

/* Macros for TASK/ISR/ALARMCALLBACK definition */
#define TASK(name)            void Os_Task_##name(void)
#define ISR(name)             void Os_Isr_##name(void)
#define ALARMCALLBACK(name)   void Os_Cbk_##name(void)

#define OSErrorGetServiceId OS_ErrorInfo.ServiceId

#define OSError_ActivateTask_TaskID OS_ErrorInfo.ServiceParameterInfo.ActivateTask.TaskID
#define OSError_ChainTask_TaskID OS_ErrorInfo.ServiceParameterInfo.ChainTask.TaskID
#define OSError_GetTaskState_TaskID OS_ErrorInfo.ServiceParameterInfo.GetTaskState.TaskID
#define OSError_GetResource_ResID OS_ErrorInfo.ServiceParameterInfo.GetResource.ResID
#define OSError_ReleaseResource_ResID OS_ErrorInfo.ServiceParameterInfo.ReleaseResource.ResID
#define OSError_SetEvent_TaskID OS_ErrorInfo.ServiceParameterInfo.SetEvent.TaskID
#define OSError_SetEvent_Mask OS_ErrorInfo.ServiceParameterInfo.SetEvent.Mask
#define OSError_ClearEvent_Mask OS_ErrorInfo.ServiceParameterInfo.ClearEvent.Mask
#define OSError_GetEvent_TaskID OS_ErrorInfo.ServiceParameterInfo.GetEvent.TaskID
#define OSError_WaitEvent_Mask OS_ErrorInfo.ServiceParameterInfo.WaitEvent.Mask
#define OSError_GetAlarmBase_AlarmID OS_ErrorInfo.ServiceParameterInfo.GetAlarmBase.AlarmID
#define OSError_GetAlarm_AlarmID OS_ErrorInfo.ServiceParameterInfo.GetAlarm.AlarmID
#define OSError_SetRelAlarm_AlarmID OS_ErrorInfo.ServiceParameterInfo.SetRelAlarm.AlarmID
#define OSError_SetRelAlarm_increment OS_ErrorInfo.ServiceParameterInfo.SetRelAlarm.increment
#define OSError_SetRelAlarm_cycle OS_ErrorInfo.ServiceParameterInfo.SetRelAlarm.cycle
#define OSError_SetAbsAlarm_AlarmID OS_ErrorInfo.ServiceParameterInfo.SetAbsAlarm.AlarmID
#define OSError_SetAbsAlarm_start OS_ErrorInfo.ServiceParameterInfo.SetAbsAlarm.start
#define OSError_SetAbsAlarm_cycle OS_ErrorInfo.ServiceParameterInfo.SetAbsAlarm.cycle
#define OSError_CancelAlarm_AlarmID OS_ErrorInfo.ServiceParameterInfo.CancelAlarm.AlarmID
#define OSError_StartOS_AppMode OS_ErrorInfo.ServiceParameterInfo.StartOS.AppMode
#define OSError_ShutdownOS_Error OS_ErrorInfo.ServiceParameterInfo.ShutdownOS.Error
#define OSError_GetCounterValue_CounterID OS_ErrorInfo.ServiceParameterInfo.GetCounterValue.CounterID
#define OSError_GetElapsedValue_CounterID OS_ErrorInfo.ServiceParameterInfo.GetElapsedValue.CounterID
#define OSError_GetElapsedValue_Value OS_ErrorInfo.ServiceParameterInfo.GetElapsedValue.Value
#define OSError_ActivateTaskAsyn_TaskID OS_ErrorInfo.ServiceParameterInfo.ActivateTaskAsyn.TaskID
#define OSError_SetEventAsyn_TaskID OS_ErrorInfo.ServiceParameterInfo.SetEventAsyn.TaskID
#define OSError_SetEventAsyn_Mask OS_ErrorInfo.ServiceParameterInfo.SetEventAsyn.Mask
#define OSError_CallTrustedFunction_FunctionIndex OS_ErrorInfo.ServiceParameterInfo.CallTrustedFunction.FunctionIndex
#define OSError_CallTrustedFunction_FunctionParams OS_ErrorInfo.ServiceParameterInfo.CallTrustedFunction.FunctionParams
#define OSError_CheckISRMemoryAccess_ISRID OS_ErrorInfo.ServiceParameterInfo.CheckISRMemoryAccess.ISRID
#define OSError_CheckISRMemoryAccess_Address OS_ErrorInfo.ServiceParameterInfo.CheckISRMemoryAccess.Address
#define OSError_CheckISRMemoryAccess_Size OS_ErrorInfo.ServiceParameterInfo.CheckISRMemoryAccess.Size
#define OSError_CheckTaskMemoryAccess_TaskID OS_ErrorInfo.ServiceParameterInfo.CheckTaskMemoryAccess.TaskID
#define OSError_CheckTaskMemoryAccess_Address OS_ErrorInfo.ServiceParameterInfo.CheckTaskMemoryAccess.Address
#define OSError_CheckTaskMemoryAccess_Size OS_ErrorInfo.ServiceParameterInfo.CheckTaskMemoryAccess.Size
#define OSError_CheckObjectAccess_ApplID OS_ErrorInfo.ServiceParameterInfo.CheckObjectAccess.ApplID
#define OSError_CheckObjectAccess_ObjectType OS_ErrorInfo.ServiceParameterInfo.CheckObjectAccess.ObjectType
#define OSError_CheckObjectAccess_ OS_ErrorInfo.ServiceParameterInfo.ReferencedObject CheckObjectAccess. ReferencedObject
#define OSError_CheckObjectOwnerShip_ObjectType OS_ErrorInfo.ServiceParameterInfo.CheckObjectOwnerShip.ObjectType
#define OSError_CheckObjectOwnerShip_ReferencedObject OS_ErrorInfo.ServiceParameterInfo.CheckObjectOwnerShip.ReferencedObject
#define OSError_StartScheduleTableRel_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.StartScheduleTableRel.ScheduleTableID
#define OSError_StartScheduleTableRel_Offset OS_ErrorInfo.ServiceParameterInfo.StartScheduleTableRel.Offset
#define OSError_StartScheduleTableAbs_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.StartScheduleTableAbs.ScheduleTableID
#define OSError_StartScheduleTableAbs_Start OS_ErrorInfo.ServiceParameterInfo.StartScheduleTableAbs.Start
#define OSError_StopScheduleTable_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.StopScheduleTable.ScheduleTableID
#define OSError_NextScheduleTable_ScheduleTableID_From OS_ErrorInfo.ServiceParameterInfo.NextScheduleTable_ScheduleTableID_From
#define OSError_NextScheduleTable_ScheduleTableID_To OS_ErrorInfo.ServiceParameterInfo.NextScheduleTable_ScheduleTableID_To
#define OSError_StartScheduleTableSynchron_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.StartScheduleTableSynchron.ScheduleTableID
#define OSError_SyncScheduleTable_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.SyncScheduleTable.ScheduleTableID
#define OSError_SyncScheduleTable_Value OS_ErrorInfo.ServiceParameterInfo.SyncScheduleTable.Value
#define OSError_GetScheduleTableStatus_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.GetScheduleTableStatus.ScheduleTableID
#define OSError_GetScheduleTableStatus_ScheduleStatus OS_ErrorInfo.ServiceParameterInfo.GetScheduleTableStatus.ScheduleStatus
#define OSError_SetScheduleTableAsync_ScheduleTableID OS_ErrorInfo.ServiceParameterInfo.SetScheduleTableAsync.ScheduleTableID
#define OSError_IncrementCounter_CounterId OS_ErrorInfo.ServiceParameterInfo.IncrementCounter.CounterId
#define OSError_TerminateApplication_Application OS_ErrorInfo.ServiceParameterInfo.TerminateApplication.Application
#define OSError_TerminateApplication_RestartOption OS_ErrorInfo.ServiceParameterInfo.TerminateApplication.RestartOption
#define OSError_GetApplicationState_Application OS_ErrorInfo.ServiceParameterInfo.GetApplicationState.Application
#define OSError_GetApplicationState_Value OS_ErrorInfo.ServiceParameterInfo.GetApplicationState.Value
#define OSError_ControlIdle_CoreID OS_ErrorInfo.ServiceParameterInfo.ControlIdle.CoreID
#define OSError_ControlIdle_IdleMode OS_ErrorInfo.ServiceParameterInfo.ControlIdle.IdleMode
#define OSError_ReadPeripheral8_Area OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral8.Area
#define OSError_ReadPeripheral8_Address OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral8.Address
#define OSError_ReadPeripheral8_ReadValue OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral8.ReadValue
#define OSError_ReadPeripheral16_Area OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral16.Area
#define OSError_ReadPeripheral16_Address OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral16.Address
#define OSError_ReadPeripheral16_ReadValue OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral16.ReadValue
#define OSError_ReadPeripheral32_Area OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral32.Area
#define OSError_ReadPeripheral32_Address OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral32.Address
#define OSError_ReadPeripheral32_ReadValue OS_ErrorInfo.ServiceParameterInfo.ReadPeripheral32.ReadValue
#define OSError_WritePeripheral8_Area OS_ErrorInfo.ServiceParameterInfo.WritePeripheral8.Area
#define OSError_WritePeripheral8_Address OS_ErrorInfo.ServiceParameterInfo.WritePeripheral8.Address
#define OSError_WritePeripheral8_WriteValue OS_ErrorInfo.ServiceParameterInfo.WritePeripheral8.WriteValue
#define OSError_WritePeripheral16_Area OS_ErrorInfo.ServiceParameterInfo.WritePeripheral16.Area
#define OSError_WritePeripheral16_Address OS_ErrorInfo.ServiceParameterInfo.WritePeripheral16.Address
#define OSError_WritePeripheral16_WriteValue OS_ErrorInfo.ServiceParameterInfo.WritePeripheral16.WriteValue
#define OSError_WritePeripheral32_Area OS_ErrorInfo.ServiceParameterInfo.WritePeripheral32.Area
#define OSError_WritePeripheral32_Address OS_ErrorInfo.ServiceParameterInfo.WritePeripheral32.Address
#define OSError_WritePeripheral32_WriteValue OS_ErrorInfo.ServiceParameterInfo.WritePeripheral32.WriteValue
#define OSError_ModifyPeripheral8_Area OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral8.Area
#define OSError_ModifyPeripheral8_Address OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral8.Address
#define OSError_ModifyPeripheral8_Clearmask OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral8.Clearmask
#define OSError_ModifyPeripheral8_Setmask OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral8.Setmask
#define OSError_ModifyPeripheral16_Area OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral16.Area
#define OSError_ModifyPeripheral16_Address OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral16.Address
#define OSError_ModifyPeripheral16_Clearmask OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral16.Clearmask
#define OSError_ModifyPeripheral16_Setmask OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral16.Setmask
#define OSError_ModifyPeripheral32_Area OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral32.Area
#define OSError_ModifyPeripheral32_Address OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral32.Address
#define OSError_ModifyPeripheral32_Clearmask OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral32.Clearmask
#define OSError_ModifyPeripheral32_Setmask OS_ErrorInfo.ServiceParameterInfo.ModifyPeripheral32.Setmask
#define OSError_DisableInterruptSource_ISRID OS_ErrorInfo.ServiceParameterInfo.DisableInterruptSource.ISRID
#define OSError_EnableInterruptSource_ISRID OS_ErrorInfo.ServiceParameterInfo.EnableInterruptSource.ISRID
#define OSError_EnableInterruptSource_ClearPending OS_ErrorInfo.ServiceParameterInfo.EnableInterruptSource.ClearPending
#define OSError_ClearPendingInterrupt_ISRID OS_ErrorInfo.ServiceParameterInfo.ClearPendingInterrupt.ISRID
#define OSError_StartCore_CoreID OS_ErrorInfo.ServiceParameterInfo.StartCore.CoreID
#define OSError_StartCore_Status OS_ErrorInfo.ServiceParameterInfo.StartCore.Status
#define OSError_StartNonAutosarCore_CoreID OS_ErrorInfo.ServiceParameterInfo.StartNonAutosarCore.CoreID
#define OSError_StartNonAutosarCore_Status OS_ErrorInfo.ServiceParameterInfo.StartNonAutosarCore.Status
#define OSError_GetSpinlock_SpinlockId OS_ErrorInfo.ServiceParameterInfo.GetSpinlock.SpinlockId
#define OSError_ReleaseSpinlock_SpinlockId OS_ErrorInfo.ServiceParameterInfo.ReleaseSpinlock.SpinlockId
#define OSError_TryToGetSpinlock_SpinlockId OS_ErrorInfo.ServiceParameterInfo.TryToGetSpinlock.SpinlockId
#define OSError_TryToGetSpinlock_Success OS_ErrorInfo.ServiceParameterInfo.TryToGetSpinlock.Success
#define OSError_ShutdownAllCores_Error OS_ErrorInfo.ServiceParameterInfo.ShutdownAllCores.Error

#define OSMEMORY_IS_READABLE(MemoryAccess) ((MemoryAccess & ACCESS_READABLE) ? 1 : 0)
#define OSMEMORY_IS_WRITEABLE(MemoryAccess) ((MemoryAccess & ACCESS_WRITEABLE) ? 1 : 0)
#define OSMEMORY_IS_EXECUTABLE(MemoryAccess) ((MemoryAccess & ACCESS_EXECUTABLE) ? 1 : 0)
#define OSMEMORY_IS_STACKSPACE(MemoryAccess) ((MemoryAccess & ACCESS_STACKSPACE) ? 1 : 0)

/*------------------------------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*------------------------------------------------------------------------------------------------*/

/* BSW version function */
extern void Os_GetVersionInfo(Std_VersionInfoType* versioninfo);

/* API functions */
/* Task */
extern StatusType ActivateTask(TaskType TaskID);
extern StatusType TerminateTask(void);
extern StatusType ChainTask(TaskType TaskID);
extern StatusType Schedule(void);
extern StatusType GetTaskID(TaskRefType TaskID);
extern StatusType GetTaskState(TaskType TaskID, TaskStateRefType State);
extern void       ActivateTaskAsyn(TaskType TaskID);

/* Interrupt */
extern void       DisableAllInterrupts(void);
extern void       EnableAllInterrupts(void);
extern void       SuspendAllInterrupts(void);
extern void       ResumeAllInterrupts(void);
extern void       SuspendOSInterrupts(void);
extern void       ResumeOSInterrupts(void);
extern StatusType DisableInterruptSource(ISRType ISRID);
extern StatusType EnableInterruptSource(ISRType ISRID, boolean ClearPending);
extern StatusType ClearPendingInterrupt(ISRType ISRID);

/* Resource */
extern StatusType GetResource(ResourceType ResID);
extern StatusType ReleaseResource(ResourceType ResID);

/* Event */
extern StatusType SetEvent(TaskType TaskID, EventMaskType Mask);
extern StatusType ClearEvent(EventMaskType Mask);
extern StatusType GetEvent(TaskType TaskID, EventMaskRefType Event);
extern StatusType WaitEvent(EventMaskType Mask);
extern void       SetEventAsyn(TaskType TaskID, EventMaskType Mask);

/* Alarm */
extern StatusType GetAlarmBase(AlarmType AlarmID, AlarmBaseRefType Info);
extern StatusType GetAlarm(AlarmType AlarmID, TickRefType Tick);
extern StatusType SetRelAlarm(AlarmType AlarmID, TickType increment, TickType cycle);
extern StatusType SetAbsAlarm(AlarmType AlarmID, TickType start, TickType cycle);
extern StatusType CancelAlarm(AlarmType AlarmID);

/* Start and Shutdown */
extern void StartOS(AppModeType AppMode);
extern void ShutdownOS(StatusType Error);

/* Application */
extern ApplicationType GetApplicationID(void);
extern StatusType      TerminateApplication(ApplicationType Application, RestartType RestartOption);
extern StatusType      AllowAccess(void);
extern StatusType      GetApplicationState(ApplicationType Application, ApplicationStateRefType Value);
extern ApplicationType GetCurrentApplicationID(void);
extern AppModeType     GetActiveApplicationMode(void);

/* Counter */
extern StatusType GetCounterValue(CounterType CounterID, TickRefType Value);
extern StatusType GetElapsedValue(CounterType CounterID, TickRefType Value, TickRefType ElapsedValue);
extern StatusType IncrementCounter(CounterType CounterId);

/* ScheduleTable */
extern StatusType StartScheduleTableRel(ScheduleTableType ScheduleTableID, TickType Offset);
extern StatusType StartScheduleTableAbs(ScheduleTableType ScheduleTableID, TickType Start);
extern StatusType StopScheduleTable(ScheduleTableType ScheduleTableID);
extern StatusType NextScheduleTable(ScheduleTableType ScheduleTableID_From, ScheduleTableType ScheduleTableID_To);
extern StatusType StartScheduleTableSynchron(ScheduleTableType ScheduleTableID);
extern StatusType SyncScheduleTable(ScheduleTableType ScheduleTableID, TickType Value);
extern StatusType GetScheduleTableStatus(ScheduleTableType ScheduleTableID, ScheduleTableStatusRefType ScheduleStatus);
extern StatusType SetScheduleTableAsync(ScheduleTableType ScheduleTableID);

/* Peripheral */
extern StatusType ReadPeripheral8(AreaIdType Area, const uint8* Address, uint8* ReadValue);
extern StatusType ReadPeripheral16(AreaIdType Area, const uint16* Address, uint16* ReadValue);
extern StatusType ReadPeripheral32(AreaIdType Area, const uint32* Address, uint32* ReadValue);
extern StatusType WritePeripheral8(AreaIdType Area, uint8* Address, uint8 WriteValue);
extern StatusType WritePeripheral16(AreaIdType Area, uint16* Address, uint16 WriteValue);
extern StatusType WritePeripheral32(AreaIdType Area, uint32* Address, uint32 WriteValue);
extern StatusType ModifyPeripheral8(AreaIdType Area, uint8* Address, uint8 Clearmask, uint8 Setmask);
extern StatusType ModifyPeripheral16(AreaIdType Area, uint16* Address, uint16 Clearmask, uint16 Setmask);
extern StatusType ModifyPeripheral32(AreaIdType Area, uint32* Address, uint32 Clearmask, uint32 Setmask);

/* Cores */
extern uint32     GetNumberOfActivatedCores(void);
extern CoreIdType GetCoreID(void);
extern void       StartCore(CoreIdType CoreID, StatusType* Status);
extern void       StartNonAutosarCore(CoreIdType CoreID, StatusType* Status);
extern void       ShutdownAllCores(StatusType Error);
extern StatusType ControlIdle(CoreIdType CoreID, IdleModeType IdleMode);

/* Spinlock */
extern StatusType GetSpinlock(SpinlockIdType SpinlockId);
extern StatusType ReleaseSpinlock(SpinlockIdType SpinlockId);
extern StatusType TryToGetSpinlock(SpinlockIdType SpinlockId, TryToGetSpinlockType* Success);

/* Misc */
extern ISRType    GetISRID(void);
extern StatusType CallTrustedFunction(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
extern AccessType CheckISRMemoryAccess(ISRType ISRID, MemoryStartAddressType Address, MemorySizeType Size);
extern AccessType CheckTaskMemoryAccess(TaskType TaskID, MemoryStartAddressType Address, MemorySizeType Size);
extern StatusType CheckObjectAccess(ApplicationType ApplID, ObjectTypeType ObjectType, void* ReferencedObject);
extern ApplicationType CheckObjectOwnerShip(ObjectTypeType ObjectType, void* ReferencedObject);


/* external Hooks */
extern void ErrorHook(StatusType status);
extern void PostTaskHook(void);
extern void PreTaskHook(void);
extern void ProtectionHook(void);
extern void ShutdownHook(StatusType status);
extern void StartupHook(void);

/*------------------------------------------------------------------------------------------------*\
  INTERNAL DEFINITIONS
\*------------------------------------------------------------------------------------------------*/

typedef union {
    struct {
        TaskType TaskID;
    } ActivateTask;
    struct {
        TaskType TaskID;
    } ChainTask;
    struct {
        TaskType TaskID;
    } GetTaskState;
    struct {
        ResourceType ResID;
    } GetResource;
    struct {
        ResourceType ResID;
    } ReleaseResource;
    struct {
        TaskType TaskID;
        EventMaskType Mask;
    } SetEvent;
    struct {
        EventMaskType Mask;
    } ClearEvent;
    struct {
        TaskType TaskID;
    } GetEvent;
    struct {
        EventMaskType Mask;
    } WaitEvent;
    struct {
        AlarmType AlarmID;
    } GetAlarmBase;
    struct {
        AlarmType AlarmID;
    } GetAlarm;
    struct {
        AlarmType AlarmID;
        TickType increment;
        TickType cycle;
    } SetRelAlarm;
    struct {
        AlarmType AlarmID;
        TickType start;
        TickType cycle;
    } SetAbsAlarm;
    struct {
        AlarmType AlarmID;
    } CancelAlarm;
    struct {
        AppModeType AppMode;
    } StartOS;
    struct {
        StatusType Error;
    } ShutdownOS;
    struct {
        CounterType CounterID;
    } GetCounterValue;
    struct {
        CounterType CounterID;
        TickType Value;
    } GetElapsedValue;
    struct {
        TaskType TaskID;
    } ActivateTaskAsyn;
    struct {
        TaskType TaskID;
        EventMaskType Mask;
    } SetEventAsyn;
    struct {
        TrustedFunctionIndexType FunctionIndex;
        TrustedFunctionParameterRefType FunctionParams;
    } CallTrustedFunction;
    struct {
        ISRType ISRID;
        MemoryStartAddressType Address;
        MemorySizeType Size;
    } CheckISRMemoryAccess;
    struct {
        TaskType TaskID;
        MemoryStartAddressType Address;
        MemorySizeType Size;
    } CheckTaskMemoryAccess;
    struct {
        ApplicationType ApplID;
        ObjectTypeType ObjectType;
        void* ReferencedObject;
    } CheckObjectAccess;
    struct {
        ObjectTypeType ObjectType;
        void* ReferencedObject;
    } CheckObjectOwnerShip;
    struct {
        ScheduleTableType ScheduleTableID;
        TickType Offset;
    } StartScheduleTableRel;
    struct {
        ScheduleTableType ScheduleTableID;
        TickType Start;
    } StartScheduleTableAbs;
    struct {
        ScheduleTableType ScheduleTableID;
    } StopScheduleTable;
    struct {
        ScheduleTableType ScheduleTableID_From;
        ScheduleTableType ScheduleTableID_To;
    } NextScheduleTable;
    struct {
        ScheduleTableType ScheduleTableID;
    } StartScheduleTableSynchron;
    struct {
        ScheduleTableType ScheduleTableID;
        TickType Value;
    } SyncScheduleTable;
    struct {
        ScheduleTableType ScheduleTableID;
        ScheduleTableStatusRefType ScheduleStatus;
    } GetScheduleTableStatus;
    struct {
        ScheduleTableType ScheduleTableID;
    } SetScheduleTableAsync;
    struct {
        CounterType CounterId;
    } IncrementCounter;
    struct {
        ApplicationType Application;
        RestartType RestartOption;
    } TerminateApplication;
    struct {
        ApplicationType Application;
        ApplicationStateRefType Value;
    } GetApplicationState;
    struct {
        CoreIdType CoreID;
        IdleModeType IdleMode;
    } ControlIdle;
    struct {
        AreaIdType Area;
        const uint8* Address;
        uint8* ReadValue;
    } ReadPeripheral8;
    struct {
        AreaIdType Area;
        const uint16* Address;
        uint16* ReadValue;
    } ReadPeripheral16;
    struct {
        AreaIdType Area;
        const uint32* Address;
        uint32* ReadValue;
    } ReadPeripheral32;
    struct {
        AreaIdType Area;
        uint8* Address;
        uint8 WriteValue;
    } WritePeripheral8;
    struct {
        AreaIdType Area;
        uint16* Address;
        uint16 WriteValue;
    } WritePeripheral16;
    struct {
        AreaIdType Area;
        uint32* Address;
        uint32 WriteValue;
    } WritePeripheral32;
    struct {
        AreaIdType Area;
        uint8* Address;
        uint8 Clearmask;
        uint8 Setmask;
    } ModifyPeripheral8;
    struct {
        AreaIdType Area;
        uint16* Address;
        uint16 Clearmask;
        uint16 Setmask;
    } ModifyPeripheral16;
    struct {
        AreaIdType Area;
        uint32* Address;
        uint32 Clearmask;
        uint32 Setmask;
    } ModifyPeripheral32;
    struct {
        ISRType ISRID;
    } DisableInterruptSource;
    struct {
        ISRType ISRID;
        boolean ClearPending;
    } EnableInterruptSource;
    struct {
        ISRType ISRID;
    } ClearPendingInterrupt;
    struct {
        CoreIdType CoreID;
        StatusType* Status;
    } StartCore;
    struct {
        CoreIdType CoreID;
        StatusType* Status;
    } StartNonAutosarCore;
    struct {
        SpinlockIdType SpinlockId;
    } GetSpinlock;
    struct {
        SpinlockIdType SpinlockId;
    } ReleaseSpinlock;
    struct {
        SpinlockIdType SpinlockId;
        TryToGetSpinlockType* Success;
    } TryToGetSpinlock;
    struct {
        StatusType Error;
    } ShutdownAllCores;
} ServiceParameterInfoType;

typedef struct {
    uint32 ServiceId;
    ServiceParameterInfoType ServiceParameterInfo;
} OSErrorInfoType;

extern OSErrorInfoType OS_ErrorInfo;

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* OS_H */

/**************************************************************************************************\
 *** END OF FILE
\**************************************************************************************************/
