/****************************************************************************************************************************************************\
 *** VEOS_Private.h
 *** 
 *** This file only provides the API definitions for VEOS frame internal purposes.
 *** 
 *** File generated on 2022-02-16
 *** 
 *** Generated by VEOS Frame API generator
 *** 
 *** VEOS Frame build revision          : 5.4.0.1269
 *** VEOS Frame interaction ABI version : 5.4.0.0
 *** GeneratorVersion                   : 5.4.0.0
 *** GeneratorTimeStamp                 : 2022-02-16 10:07:28 (UTC)
 *** Used APIs and ABI versions         :
 ***     BusApi                         : 5.0.0.0
 ***     ExperimentationApi             : 5.3.0.0
 ***     SimulationApi                  : 5.4.0.0
 ***     NotificationApi                : 5.0.0.0
 ***     MessageApi                     : 5.0.0.0
 ***     PortApi                        : 5.1.0.1
 ***     OsTaskHandlingApi              : 5.0.0.0
 *** 
 *** Copyright (c) 2022 by dSPACE GmbH, Paderborn, Germany.
 *** All Rights Reserved.
\****************************************************************************************************************************************************/

#ifndef VEOS_PRIVATE_H
#define VEOS_PRIVATE_H

/*--------------------------------------------------------------------------------------------------------------------------------------------------*\
  INCLUDES
\*--------------------------------------------------------------------------------------------------------------------------------------------------*/

#include "VEOS.h"

/*--------------------------------------------------------------------------------------------------------------------------------------------------*\
  VARIABLE DECLARATIONS
\*--------------------------------------------------------------------------------------------------------------------------------------------------*/

#ifdef VEOS_GUARD_PRIVATE_API_OK
/****************************************************************************************************************************************************\
 *** Directly transferred global variables for VEOS frame ExperimentationApi
\****************************************************************************************************************************************************/
#if defined(VEOS_GUARD_EXPAPIXCPSERVICEUSERS_OK)
#if VEOS_DAQ_SERVICE_XCP == VEOS_ON
/* The XCP service configuration. */
extern const VEOS_ExpApi_XcpServiceConfigType g_VEOS_ExpApi_XcpServiceConfig;
#endif
#endif
/* Pointer to the ExpApi instance. */
extern void * gp_VEOS_ExpApi_Instance;

/****************************************************************************************************************************************************\
 *** Directly transferred global variables for VEOS frame SimulationApi
\****************************************************************************************************************************************************/
/* The difference between the simulated approximated real time and the simulation time. */
extern volatile VEOS_float64 g_VEOS_SimApi_RealTimeDeviation;
/* Pointer to the SimApi instance. */
extern void * gp_VEOS_SimApi_Instance;

/****************************************************************************************************************************************************\
 *** Directly transferred global variables for VEOS frame NotificationApi
\****************************************************************************************************************************************************/
/* Pointer to the NotiApi instance. */
extern void * gp_VEOS_NotiApi_Instance;

/****************************************************************************************************************************************************\
 *** Directly transferred global variables for VEOS frame MessageApi
\****************************************************************************************************************************************************/
/* Pointer to the MsgApi instance. */
extern void * gp_VEOS_MsgApi_Instance;

/****************************************************************************************************************************************************\
 *** Directly transferred global variables for VEOS frame OsTaskHandlingApi
\****************************************************************************************************************************************************/
/* Pointer to the OsTskApi instance. */
extern void * gp_VEOS_OsTskApi_Instance;

/****************************************************************************************************************************************************\
 *** Accessible calibratable variables for VEOS frame BusApi
\****************************************************************************************************************************************************/
/* Disconnect all bus connections. */
extern VEOS_CAL VEOS_uint8 g_VEOS_DisconnectBuses;

/****************************************************************************************************************************************************\
 *** Accessible calibratable variables for VEOS frame SimulationApi
\****************************************************************************************************************************************************/
/* Disconnect from all external connections. */
extern VEOS_CAL VEOS_uint8 g_VEOS_DisconnectCompletely;

/****************************************************************************************************************************************************\
 *** Accessible calibratable variables for VEOS frame PortApi
\****************************************************************************************************************************************************/
/* Disconnect all port connections. */
extern VEOS_CAL VEOS_uint8 g_VEOS_DisconnectPorts;


/*--------------------------------------------------------------------------------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*--------------------------------------------------------------------------------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*--------*
 * BusApi *
 *--------*/

#ifdef VEOS_GUARD_BUSAPIUSERS_OK
#ifdef VEOS_GUARD_CANBUSAPIUSERS_OK
#ifdef VEOS_GUARD_LINBUSAPIUSERS_OK
/****************************************************************************************************************************************************\
 *** Implementation of simulation event handlers
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_BusApiImpl_MessageReceivedEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function MessageReceivedEvent for BusApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     Type                                 Name      Description
 ***     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ***     const VEOS_BusApi_MessageHandleType  Msg       Incoming argument: The handle of the message.
 ***     const VEOS_BusApi_InterfaceType      Protocol  Incoming argument: The simulated hardware interface type.
 ***     const VEOS_uint32                    MsgId     Incoming argument: The id of the message transferred.
 ***     const VEOS_uint32                    CbkArg    Incoming argument: The custom callback argument for this event.
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_BusApiImpl_MessageReceivedEvent(
    const VEOS_BusApi_MessageHandleType Msg,
    const VEOS_BusApi_InterfaceType Protocol,
    const VEOS_uint32 MsgId,
    const VEOS_uint32 CbkArg
);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_BusApiImpl_ChannelStatusEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function ChannelStatusEvent for BusApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     Type                                   Name      Description
 ***     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ***     const VEOS_BusApi_ConnectorHandleType  Channel   Incoming argument: The handle of the channel.
 ***     const VEOS_BusApi_InterfaceType        Protocol  Incoming argument: The simulated hardware interface.
 ***     const VEOS_BusApi_ConnectorStatusType  Status    Incoming argument: The status of the message.
 ***     const VEOS_uint32                      CbkArg    Incoming argument: The custom callback argument for this event.
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_BusApiImpl_ChannelStatusEvent(
    const VEOS_BusApi_ConnectorHandleType Channel,
    const VEOS_BusApi_InterfaceType Protocol,
    const VEOS_BusApi_ConnectorStatusType Status,
    const VEOS_uint32 CbkArg
);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_BusApiImpl_LinHeaderReceivedEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function LinHeaderReceivedEvent for BusApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     Type                                 Name       Description
 ***     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ***     const VEOS_BusApi_MessageHandleType  MsgHandle  Incoming argument: The handle of the message.
 ***     const VEOS_uint32                    MsgId      Incoming argument: The id of the message transferred.
 ***     const VEOS_uint32                    CbkArg     Incoming argument: The argument for the callback handler function.
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_BusApiImpl_LinHeaderReceivedEvent(
    const VEOS_BusApi_MessageHandleType MsgHandle,
    const VEOS_uint32 MsgId,
    const VEOS_uint32 CbkArg
);

/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_BusApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame BusApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_BusApi_Start(void);

#endif
#endif
#endif

/*--------------------*
 * ExperimentationApi *
 *--------------------*/

#ifdef VEOS_GUARD_EXPAPIXCPSERVICEUSERS_OK
#ifdef VEOS_GUARD_EXPSVCUSERS_OK
#ifdef VEOS_GUARD_EXPSVCVECUUSER_OK
/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_ExpApi_Download
 *** 
 *** DESCRIPTION:
 ***     Performs an initialization on the VEOS Frame ExpApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_ExpApi_Download(void);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_ExpApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame ExpApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_ExpApi_Start(void);

#endif
#endif
#endif

/*---------------*
 * SimulationApi *
 *---------------*/

#ifdef VEOS_GUARD_TERMINATIONAPIUSERS_OK
#ifdef VEOS_GUARD_INTERRUPTHANDLING_OK
/****************************************************************************************************************************************************\
 *** External hand-coded implementations of API function.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_CallIoHandler
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of API function CallIoHandler for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     Type               Name       Description
 ***     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ***     const VEOS_uint32  IoEventId  Incoming argument: The ID of the event which has occurred.
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_CallIoHandler(const VEOS_uint32 IoEventId);

/****************************************************************************************************************************************************\
 *** Implementation of simulation event handlers
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_DownloadEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function DownloadEvent for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     Type                 Name                Description
 ***     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ***     const VEOS_uint32    ApplicationId       Incoming argument: The application id.
 ***     const void * const   TargetAddressBase   Incoming argument: The application address.
 ***     const VEOS_uint32    ModelConfiguration  Incoming argument: The model id to transfer.
 ***     VEOS_uint32 * const  ModelCheckResult    Outgoing argument: The result of the model configuration check.
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_DownloadEvent(
    const VEOS_uint32 ApplicationId,
    const void * const TargetAddressBase,
    const VEOS_uint32 ModelConfiguration,
    VEOS_uint32 * const ModelCheckResult
);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_StartEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function StartEvent for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_StartEvent(void);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_TriggerEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function TriggerEvent for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_TriggerEvent(void);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_StopEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function StopEvent for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_StopEvent(void);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_ResetEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function ResetEvent for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     Type          Name     Description
 ***     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ***     void * const  VpuData  Incoming and outgoing argument: The VPU data.
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_ResetEvent(void * const VpuData);

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApiImpl_UnloadEvent
 *** 
 *** DESCRIPTION:
 ***     Hand-coded implementation of frame function UnloadEvent for SimApi of VEOS Frame
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApiImpl_UnloadEvent(void);

/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_SimApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame SimApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_SimApi_Start(void);

#endif
#endif

/*-----------------*
 * NotificationApi *
 *-----------------*/

#ifdef VEOS_GUARD_NOTIFICATIONAPIUSERS_OK
/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_NotiApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame NotiApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_NotiApi_Start(void);

#endif

/*------------*
 * MessageApi *
 *------------*/

#ifdef VEOS_GUARD_OSIMPLEMENTATION_OK
#ifdef VEOS_GUARD_DAPIMPLEMENTATION_OK
#ifdef VEOS_GUARD_SABIMPLEMENTATION_OK
#ifdef VEOS_GUARD_SICAPPLICATIONFRAME_OK
#ifdef VEOS_GUARD_BSCAPPLICATIONFRAME_OK
#ifdef VEOS_GUARD_DSMSGAPI_OK
/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_MsgApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame MsgApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_MsgApi_Start(void);

#endif
#endif
#endif
#endif
#endif
#endif

/*---------*
 * PortApi *
 *---------*/

#ifdef VEOS_GUARD_PORTAPIUSERS_OK
/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_PortApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame PortApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_PortApi_Start(void);

#endif

/*-------------------*
 * OsTaskHandlingApi *
 *-------------------*/

#ifdef VEOS_GUARD_TASKHANDLINGAPIUSERS_OK
/****************************************************************************************************************************************************\
 *** Functions required to initialize the simulation frame APIs.
\****************************************************************************************************************************************************/

/****************************************************************************************************************************************************\
 *** FUNCTION:
 ***     VEOS_OsTskApi_Start
 *** 
 *** DESCRIPTION:
 ***     Performs a start-up on the VEOS Frame OsTskApi part.
 *** 
 *** PARAMETERS:
 ***     -/-
 *** 
 *** RETURNS:
 ***     VEOS_ApiSuccessType    If no error occurs, VEOS_E_OK will be returned. If any error occurs, an error code will be the result. See
 ***                            VEOS_Types.h for details.
\****************************************************************************************************************************************************/
extern VEOS_ApiSuccessType VEOS_OsTskApi_Start(void);

#endif
#endif

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* VEOS_PRIVATE_H */
/*--------------------------------------------------------------------------------------------------------------------------------------------------*\
  END OF FILE
\*--------------------------------------------------------------------------------------------------------------------------------------------------*/
