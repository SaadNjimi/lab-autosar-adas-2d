/**************************************************************************************************\
 *** 
 *** System              : System
 *** ECU                 : EcuInstance
 *** Configuration       : EcucValueCollection
 *** Codefile            : Rte_Type.h
 ***
 *** Generated by the SystemDesk RTE code generator
 *** Generation date: 2025-06-11 10:13:55
 ***
 *** SystemDesk version  : 5.6.0.13023
 *** Copyright (c) 2016 dSPACE GmbH
\**************************************************************************************************/

#ifndef RTE_TYPE_H
#define RTE_TYPE_H

/*----------------------------------------------------------------------------*\
  DEFINES (OPT)
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  INCLUDES
\*----------------------------------------------------------------------------*/

#include "Platform_Types.h"
#include "Std_Types.h"
/*----------------------------------------------------------------------------*\
  DEFINES
\*----------------------------------------------------------------------------*/


/******************************************************************************\
   RTE_SYMBOLIC_SCALING_ENUMERATIONS_UNSIGNED: Symbolic scaling(s). | Width: 32
\******************************************************************************/
#ifndef ECUM_SUBSTATE_MASK
#define ECUM_SUBSTATE_MASK 15U /* 15 */ 
#endif 
#ifndef ECUM_STATE_STARTUP
#define ECUM_STATE_STARTUP 16U /* 16 */ 
#endif 
#ifndef ECUM_STATE_STARTUP_ONE
#define ECUM_STATE_STARTUP_ONE 17U /* 17 */ 
#endif 
#ifndef ECUM_STATE_STARTUP_TWO
#define ECUM_STATE_STARTUP_TWO 18U /* 18 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP
#define ECUM_STATE_WAKEUP 32U /* 32 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP_ONE
#define ECUM_STATE_WAKEUP_ONE 33U /* 33 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP_VALIDATION
#define ECUM_STATE_WAKEUP_VALIDATION 34U /* 34 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP_REACTION
#define ECUM_STATE_WAKEUP_REACTION 35U /* 35 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP_TWO
#define ECUM_STATE_WAKEUP_TWO 36U /* 36 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP_WAKESLEEP
#define ECUM_STATE_WAKEUP_WAKESLEEP 37U /* 37 */ 
#endif 
#ifndef ECUM_STATE_WAKEUP_TTII
#define ECUM_STATE_WAKEUP_TTII 38U /* 38 */ 
#endif 
#ifndef ECUM_STATE_RUN
#define ECUM_STATE_RUN 48U /* 48 */ 
#endif 
#ifndef ECUM_STATE_APP_RUN
#define ECUM_STATE_APP_RUN 50U /* 50 */ 
#endif 
#ifndef ECUM_STATE_APP_POST_RUN
#define ECUM_STATE_APP_POST_RUN 51U /* 51 */ 
#endif 
#ifndef ECUM_STATE_SHUTDOWN
#define ECUM_STATE_SHUTDOWN 64U /* 64 */ 
#endif 
#ifndef ECUM_STATE_PREP_SHUTDOWN
#define ECUM_STATE_PREP_SHUTDOWN 68U /* 68 */ 
#endif 
#ifndef ECUM_STATE_GO_SLEEP
#define ECUM_STATE_GO_SLEEP 73U /* 73 */ 
#endif 
#ifndef ECUM_STATE_GO_OFF_ONE
#define ECUM_STATE_GO_OFF_ONE 77U /* 77 */ 
#endif 
#ifndef ECUM_STATE_GO_OFF_TWO
#define ECUM_STATE_GO_OFF_TWO 78U /* 78 */ 
#endif 
#ifndef ECUM_STATE_SLEEP
#define ECUM_STATE_SLEEP 80U /* 80 */ 
#endif 
#ifndef ECUM_STATE_OFF
#define ECUM_STATE_OFF 128U /* 128 */ 
#endif 
#ifndef ECUM_STATE_RESET
#define ECUM_STATE_RESET 144U /* 144 */ 
#endif 
#ifndef ECUM_BOOT_TARGET_APP
#define ECUM_BOOT_TARGET_APP 0U /* 0 */ 
#endif 
#ifndef ECUM_BOOT_TARGET_OEM_BOOTLOADER
#define ECUM_BOOT_TARGET_OEM_BOOTLOADER 1U /* 1 */ 
#endif 
#ifndef ECUM_BOOT_TARGET_SYS_BOOTLOADER
#define ECUM_BOOT_TARGET_SYS_BOOTLOADER 2U /* 2 */ 
#endif 
#ifndef FALSE
#define FALSE 0U /* 0 */ 
#endif 
#ifndef TRUE
#define TRUE 1U /* 1 */ 
#endif 

/* Error check macros. */
/*************************************************************************************************\
 ***  PARAMETERIZED MACRO:
 ***      Rte_IsInfrastructureError
 ***
 ***  DESCRIPTION:
 ***      Enables an application to check the return value of an API for infrastructure errors.
 ***
 ***  PARAMETERS:
 ***      Type               Name                Description
 ***      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 ***      Std_ReturnType     status              
 ***
 ***  RETURNS:
 ***      boolean
 ***
 ***  SETTINGS:
 ***
\*************************************************************************************************/
#define Rte_IsInfrastructureError(status) (((status) & 128U) != 0) 

/*************************************************************************************************\
 ***  PARAMETERIZED MACRO:
 ***      Rte_HasOverlayedError
 ***
 ***  DESCRIPTION:
 ***      Enables an application to check the return value of an API for an overlayed error.
 ***
 ***  PARAMETERS:
 ***      Type               Name                Description
 ***      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 ***      Std_ReturnType     status              
 ***
 ***  RETURNS:
 ***      boolean
 ***
 ***  SETTINGS:
 ***
\*************************************************************************************************/
#define Rte_HasOverlayedError(status) (((status) & 64U) != 0) 

/*************************************************************************************************\
 ***  PARAMETERIZED MACRO:
 ***      Rte_ApplicationError
 ***
 ***  DESCRIPTION:
 ***      Enables an application to check the return value of an API for application errors.
 ***
 ***  PARAMETERS:
 ***      Type               Name                Description
 ***      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 ***      Std_ReturnType     status              
 ***
 ***  RETURNS:
 ***      boolean
 ***
 ***  SETTINGS:
 ***
\*************************************************************************************************/
#define Rte_ApplicationError(status) ((status) & 63U) 

/*----------------------------------------------------------------------------*\
  TYPEDEFS
\*----------------------------------------------------------------------------*/


 /* Represents the transformer error in the context of a certain transformer chain. */
typedef Std_TransformerErrorCode Rte_TransformerErrorCode;

 /* Represents the transformer class in which the error occurred. */
typedef Std_TransformerClass Rte_TransformerClass;

 /* Contains the error code and the transformer class to which a transformer error belongs to. */
typedef Std_TransformerError Rte_TransformerError;
typedef uint8 EcuM_StateType;
typedef uint8 EcuM_UserType;
typedef uint8 EcuM_BootTargetType;
/*----------------------------------------------------------------------------*\
  ENUMS
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  VARIABLES
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  PARAMETERIZED MACROS
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*----------------------------------------------------------------------------*/


#endif/*RTE_TYPE_H */
/*----------------------------------------------------------------------------*\
 END OF FILE
\*----------------------------------------------------------------------------*/
